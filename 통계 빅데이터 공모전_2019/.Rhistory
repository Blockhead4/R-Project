html_node('div.score_result') %>%
html_nodes('li') -> lis
score <- c()
writer <- c()
review <- c()
time <- c()
for (li in lis) {
score <- c(score, html_node(li, '.star_score') %>% html_text('em') %>% trim())
li %>%
html_node('.score_reple') %>%
html_text('p') %>%
trim() -> tmp
idx <- str_locate(tmp, "\r")
review <- c(review, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
writer <- c(writer, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
time <- c(time, str_sub(tmp, 1, idx[1]-1))
#print(time)
}
result <- data.frame(score=score, review=review, writer=writer, time=time)
reviews <- rbind.data.frame(reviews, result)
}
reviews
url <- 'https://front.wemakeprice.com/deal/600089247?source=dealsearch&search_keyword=%EA%B7%B8%EB%9E%A8&_service=5&no&extservice=ad'
html <- read_html
html <- read_html(url)
html
a <- html_node(html, 'div.review_area')
a
a <- html_nodes(html, 'div.review_area')
a
a <- html_nodes(html, '.tab_conts')
a
a <- html_node(html, '.tab_conts')
a
a <- html_nodes(html, '.review_area')
a
a <- html_node(html, '.review_area')
a <- html_node(html, '.tab_conts')
a <- html_node(html, '.review_area')
a
a <- html_node(html, '.desc_cont')
a
a <- html_node(html, '.tab_conts')
a <- html_node(html, '.desc_cont')
a
a <- html_nodes(html, '.review_area')
a
# NAVER 영화 ('스파이더맨 : 파프롬 홈') 일반인 리뷰 크롤링
ifr_base_url <- 'https://movie.naver.com/movie/bi/mi/pointWriteFormList.nhn?code=173123&type=after&isActualPointWriteExecute=false&isMileageSubscriptionAlready=false&isMileageSubscriptionReject=false&page='
pages <- c(1:242)
reviews <- c()
for(i in 1:length(pages)) {
url_all <- paste0(ifr_base_url, pages[i])
html <- read_html(url_all)
html %>%
html_node('div.score_result') %>%
html_nodes('li') -> lis
score <- c()
writer <- c()
review <- c()
time <- c()
for (li in lis) {
score <- c(score, html_node(li, '.star_score') %>% html_text('em') %>% trim())
li %>%
html_node('.score_reple') %>%
html_text('p') %>%
trim() -> tmp
idx <- str_locate(tmp, "\r")
review <- c(review, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
writer <- c(writer, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
time <- c(time, str_sub(tmp, 1, idx[1]-1))
#print(time)
}
result <- data.frame(score=score, review=review, writer=writer, time=time)
reviews <- rbind.data.frame(reviews, result)
}
library(xlsx)
write.xlsx(reviews, "D:/workspace-Jwp/R/R-Project/01_Crowling/reviews.xlsx")
# NAVER 영화 ('스파이더맨 : 파프롬 홈') 일반인 리뷰 크롤링
library(rvest)
library(stringr)
library(dplyr)
library(xlsx)
library(rJava)
library(KoNLP)
library(wordcloud)
library(RColorBrewer)
library(ggplot2)
library(KoNLP)
# NAVER 영화 ('스파이더맨 : 파프롬 홈') 일반인 리뷰 크롤링
library(rvest)
library(stringr)
library(dplyr)
library(xlsx)
library(rJava)
library(wordcloud)
library(RColorBrewer)
library(ggplot2)
library(KoNLP)
install.packages("KoNLP")
library(KoNLP)
install.packages("KoNLP")
library(rJava)
library(KoNLP)
library(rJava)
# NAVER 영화 ('스파이더맨 : 파프롬 홈') 일반인 리뷰 크롤링
library(rvest)
library(stringr)
library(dplyr)
library(xlsx)
library(rJava)
library(wordcloud)
library(RColorBrewer)
library(ggplot2)
library(KoNLP)
# NAVER 영화 ('스파이더맨 : 파프롬 홈') 일반인 리뷰 크롤링
library(rvest)
library(stringr)
library(dplyr)
library(xlsx)
library(rJava)
library(wordcloud)
library(RColorBrewer)
library(ggplot2)
library(KoNLP)
useSejongDic()
Sys.setenv(JAVA_HOME="C:/Program Files/Java/jdk1.8.0_202")
library(rJava)
library(KoNLP)
# NAVER 영화 ('스파이더맨 : 파프롬 홈') 일반인 리뷰 크롤링
Sys.setenv(JAVA_HOME="C:/Program Files/Java/jdk1.8.0_202/")
library(rvest)
library(stringr)
library(dplyr)
library(xlsx)
library(rJava)
library(wordcloud)
library(RColorBrewer)
library(ggplot2)
library(KoNLP)
# NAVER 영화 ('스파이더맨 : 파프롬 홈') 일반인 리뷰 크롤링
Sys.setenv(JAVA_HOME="C:/Program Files/Java/jdk1.8.0_202/")
library(rvest)
library(stringr)
library(dplyr)
library(xlsx)
library(rJava)
library(wordcloud)
library(RColorBrewer)
library(ggplot2)
library(KoNLP)
library(rJava)
library(KoNLP)
# NAVER 영화 ('스파이더맨 : 파프롬 홈') 일반인 리뷰 크롤링
Sys.setenv(JAVA_HOME="C:/Program Files/Java/jre1.8.0_211")
library(rJava)
library(KoNLP)
# NAVER 영화 ('스파이더맨 : 파프롬 홈') 일반인 리뷰 크롤링
Sys.setenv(JAVA_HOME="C:/Program Files/Java/jre1.8.0_211")
library(rvest)
library(stringr)
library(dplyr)
library(xlsx)
library(rJava)
library(KoNLP)
library(wordcloud)
library(RColorBrewer)
library(ggplot2)
# NAVER 영화 ('스파이더맨 : 파프롬 홈') 일반인 리뷰 크롤링
Sys.setenv(JAVA_HOME="C:/Program Files/Java/jre1.8.0_211/")
library(rvest)
library(stringr)
library(dplyr)
library(xlsx)
library(rJava)
library(KoNLP)
library(wordcloud)
library(RColorBrewer)
library(ggplot2)
# NAVER 영화 ('스파이더맨 : 파프롬 홈') 일반인 리뷰 크롤링
Sys.setenv(JAVA_HOME="C:/Program Files/Java/jdk1.8.0_211/")
library(rvest)
library(stringr)
library(dplyr)
library(xlsx)
library(rJava)
library(KoNLP)
library(wordcloud)
library(RColorBrewer)
library(ggplot2)
useSejongDic()
install.packages("rJava")
install.packages("rJava")
library(rJava)
library(rJava)
install.packages("rJava")
# NAVER 영화 ('스파이더맨 : 파프롬 홈') 일반인 리뷰 크롤링
Sys.setenv(JAVA_HOME="C:/Program Files/Java/jdk1.8.0_211/")
library(rvest)
library(stringr)
library(dplyr)
library(xlsx)
library(rJava)
library(KoNLP)
library(wordcloud)
library(RColorBrewer)
library(ggplot2)
install.packages("rJava")
install.packages("rJava")
library(rJava)
library(rJava)
library(rJava)
# NAVER 영화 [ 스파이더맨 : 파프롬 홈 ] 일반인 리뷰 크롤링
library(rvest)
library(stringr)
library(dplyr)
library(xlsx)
library(rJava)
library(KoNLP)
library(rJava)
library(KoNLP)
# NAVER 영화 [ 스파이더맨 : 파프롬 홈 ] 일반인 리뷰 크롤링
install.packages("rJava")
install.packages("rJava")
library(rJava)
library(KoNLP)
a <- data.frame(c(1:100), c(rep('a', 'b', 50)))
a
a <- data.frame(c(1:100), c(rep('a', 'b', each=50)))
?rep
a <- data.frame(c(1:100), c(rep('a', 'b', each=T)))
rep(1, 2)
a <- data.frame(c(1:100), rep(c('a', 'b'), each=50)))
rep(c(1, 2), 3)
rep(c(1, 2), each=T)
rep(c(1, 2), 30, each=T)
rep(c(1, 2, 2), 30, each=T)
rep(c(1, 2, 2), 30)
rep(c('a','b'), each=2)
rep(c('a','b'), 2)
a <- data.frame(c(1:100), rep(c('a', 'b'), 50)))
a <- data.frame(c(1:100), rep(c('a', 'b'), 100)))
a <- data.frame(c(1:100), rep(c('a', 'b'), 100))
aa
a
a <- data.frame(c(1:100), rep(c('a', 'b'), 50)
a <- data.frame(c(1:100), rep(c('a', 'b'), 50))
?rep
a
b <- data.frame(rep(c('a', 'b'), 50), rep(c('123214', '898908'), 50))
b
?merge
library(rJava)
library(dplyr)
library(ggplot2)
library(RColorBrewer)
#install.packages("stringi")
#install.packages("devtools")
devtools::install_github("cardiomoon/kormaps2014")
devtools::install_github("cardiomoon/Kormaps")
devtools::install_github("cardiomoon/Kormaps", force=T)
1
library(gridExtra)
library(tibble)
library(maps)
library(ggiraphExtra)
require(Kormaps)
require(tmap)
qtm(kormap1)
Seoul2=submap(korpopmap2,"서울")
qtm(Seoul2,"외국인_계_명")+tm_layout(fontfamily="AppleGothic")
ggChoropleth(data = korpop1,
aes(fill=총인구_명, map_id=code),
map = kormap1,
interactive=T)
#install.packages("stringi")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("cardiomoon/Kormaps")
require(Kormaps)
require(tmap)
library(kormaps2014)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(tibble)
library(maps)
library(ggiraphExtra)
korpop1
names(korpop1)
korpop1 <- rename(korpop1, pop <- 총인구_명, name <- 행정구역별_읍면동)   # 컬럼명 바꾸기
head(korpop1)
names(korpop1)
korpop1 <- rename(korpop1, pop=총인구_명, name=행정구역별_읍면동)   # 컬럼명 바꾸기
head(korpop1)
ggChoropleth(data = korpop1,
aes(fill=pop, map_id=code),
map = kormap1,
interactive=T)
ggChoropleth(data = korpop1,
aes(fill=pop, map_id=code),
map = kormap3,
interactive=T)
library(ggiraphExtra)
library(gridExtra)
# 행 이름을 칼럼으로 바꿔주는 함수
crime <- rownames_to_column(USArrests, var="state")   # tibble 패키지
head(crime)
crime$state <- tolower(crime$state)
# maps 패키지의 map_data로 미국 주 지도 가져오기
states_map <- map_data("state")
str(states_map)
# 단계 구분도 만들기
install.packages('mapproj')
install.packages("mapproj")
library(mapproj)
# 인터랙티브 단계 구분도 만들기
ggChoropleth(data = crime,
aes(fill=Murder, map_id= state),
map = states_map,
interactive=T)    # 뷰어에 출력된 Plot 안의 정보를 조회할 수 있음
library(ggiraphExtra)
library(gridExtra)
library(ggplot2)
library(tibble)
library(dplyr)
library(reshape2)
library(maps)
#
m <- ggChoropleth(data = crime,
aes(fill=Murder, map_id= state),
map = states_map) +
ggtitle("미국 주별 살인범죄 분포", "(단위 : 인구 10만명당 건수)")+
theme(plot.title = element_text(face="bold", hjust=0.5, size=14)) +
theme(plot.subtitle = element_text(hjust=1, size=12))
m
r <- ggChoropleth(data = crime,
aes(fill=Rape, map_id= state),
map = states_map)
a <- ggChoropleth(data = crime,
aes(fill=Assault, map_id= state),
map = states_map)
u <- ggChoropleth(data = crime,
aes(fill=UrbanPop,
map_id= state),
map = states_map)
windows()
#windows()
grid.arrange(m, r, a, u, ncol=2,
top = "미국 주별 강력범죄 분포")
sdata2 <- sdata2 %>%
group_by(자치구) %>%
summarise_each(funs(mean), X0세, X1세, X2세, X3세)
options(digits=2)
View(sdata2)
ggplot(sdata2, aes(자치구, X0세, fill=자치구)) +  geom_col()
names(sdata2)
setwd("D:/workspace-Jwp/R/R-Project/통계 빅데이터 공모전_2019")
# 18년도 자치구별 0~2세 인구 분포
data18 <- read.csv("data/서울시_주민등록인구_2018.txt", header=T, sep="\t")
View(data18)
sdata <- data18 %>%
filter(행정동 != c('합계', '소계'))
sdata2 <- sdata[, c(1:8)]
head(sdata2)
sdata2$합계 <- as.numeric(sdata2$합계)
sdata2$X0세 <- as.numeric(sdata2$X0세)
sdata2$X1세 <- as.numeric(sdata2$X1세)
sdata2$X2세 <- as.numeric(sdata2$X2세)
sdata2$X3세 <- as.numeric(sdata2$X3세)
str(sdata2)
sdata2 <- sdata2 %>%
group_by(자치구) %>%
summarise_each(funs(mean), X0세, X1세, X2세, X3세)
options(digits=2)
View(sdata2)
ggplot(sdata2, aes(자치구, X0세, fill=자치구)) +  geom_col()
names(sdata2)
sdata2
sdtat2 <- sdata2 %>%
mutate(영세아(0~3세) = X0세+X1세+X2세+X3세)
sdtat2 <- sdata2 %>%
mutate(영세아 = X0세+X1세+X2세+X3세)
sdtat2 <- sdata2 %>%
mutate("영세아_0~3세" = X0세+X1세+X2세+X3세)
sdata2 <- sdata2 %>%
mutate("영세아_0~3세" = X0세+X1세+X2세+X3세)
rm(sdtat2)
sdata2
sdata <- data18 %>%
filter(행정동 != c('합계', '소계'))
sdata2 <- sdata[, c(1:8)]
head(sdata2)
sdata2$합계 <- as.numeric(sdata2$합계)
sdata2$X0세 <- as.numeric(sdata2$X0세)
sdata2$X1세 <- as.numeric(sdata2$X1세)
sdata2$X2세 <- as.numeric(sdata2$X2세)
sdata2$X3세 <- as.numeric(sdata2$X3세)
str(sdata2)
sdata2 <- sdata2 %>%
group_by(자치구) %>%
summarise_each(funs(mean), X0세, X1세, X2세, X3세)
options(digits=2)
ggplot(sdata2, aes(자치구, X0세, fill=자치구)) +  geom_col()
sdata2
sdata3 <- sdata2 %>%
mutate("영세아_0~3세" = X0세+X1세+X2세+X3세)
sdata2
ggplot(sdata2, aes(자치구, X0세, fill=자치구)) +  geom_col()
sdata2
sdata3
sdata3 <- sdata2 %>%
mutate("영세아" = X0세+X1세+X2세+X3세)
sdata3
ggplot(sdata2, aes(자치구, 영세아, fill=자치구)) +  geom_col()
ggplot(sdata3, aes(자치구, 영세아, fill=자치구)) +  geom_col()
sdata3 <- sdata2 %>%
mutate("영세아" = X0세+X1세+X2세+X3세) %>%
arrange(desc(영세아))
sdata3
sdata2 <- sdata2 %>%
group_by(자치구) %>%
summarise_each(funs(mean), X0세, X1세, X2세, X3세) %>%
arrange(desc(X0세, X1세, X2세, X3세))
sdata2
sdata2
sdata3
head(sdata2)
head(sdata3)
head(sdata2); head(sdata3)
setwd("D:/workspace-Jwp/R/R-Project/통계 빅데이터 공모전_2019")
options(digits=2)
# 18년도 자치구별 0~2세 인구 분포
data18 <- read.csv("data/서울시_주민등록인구_2017.txt", header=T, sep="\t")
e
# 18년도 자치구별 0~2세 인구 분포
data17 <- read.csv("data/서울시_주민등록인구_2017.txt", header=T, sep="\t")
sdata <- data18 %>%
filter(행정동 != c('합계', '소계'))
sdata2 <- sdata[, c(1:8)]
head(sdata2)
sdata <- data17 %>%
filter(행정동 != c('합계', '소계'))
sdata2 <- sdata[, c(1:8)]
head(sdata2)
sdata2$합계 <- as.numeric(sdata2$합계)
sdata2$X0세 <- as.numeric(sdata2$X0세)
sdata2$X1세 <- as.numeric(sdata2$X1세)
sdata2$X2세 <- as.numeric(sdata2$X2세)
sdata2$X3세 <- as.numeric(sdata2$X3세)
str(sdata2)
sdata2 <- sdata2 %>%
group_by(자치구) %>%
summarise_each(funs(mean), X0세, X1세, X2세, X3세) %>%
arrange(desc(X0세, X1세, X2세, X3세))
sdata2
head(sdata2)
ggplot(sdata2, aes(자치구, X0세, fill=자치구)) +  geom_col()
sdata2
sdata3 <- sdata2 %>%
mutate("영세아" = X0세+X1세+X2세+X3세) %>%
arrange(desc(영세아))
sdata3
head(sdata3)
ggplot(sdata3, aes(자치구, 영세아, fill=자치구)) +  geom_col()
head(sdata2); head(sdata3)
setwd("D:/workspace-Jwp/R/R-Project/통계 빅데이터 공모전_2019")
options(digits=2)
# 18년도 자치구별 0~2세 인구 분포
data16 <- read.csv("data/서울시_주민등록인구_2016.txt", header=T, sep="\t")
sdata <- data16 %>%
filter(행정동 != c('합계', '소계'))
sdata2 <- sdata[, c(1:8)]
head(sdata2)
sdata2$합계 <- as.numeric(sdata2$합계)
sdata2$X0세 <- as.numeric(sdata2$X0세)
sdata2$X1세 <- as.numeric(sdata2$X1세)
sdata2$X2세 <- as.numeric(sdata2$X2세)
sdata2$X3세 <- as.numeric(sdata2$X3세)
str(sdata2)
sdata2 <- sdata2 %>%
group_by(자치구) %>%
summarise_each(funs(mean), X0세, X1세, X2세, X3세) %>%
arrange(desc(X0세, X1세, X2세, X3세))
sdata2
head(sdata2)
ggplot(sdata2, aes(자치구, X0세, fill=자치구)) +  geom_col()
sdata2
sdata3 <- sdata2 %>%
mutate("영세아" = X0세+X1세+X2세+X3세) %>%
arrange(desc(영세아))
sdata3
head(sdata3)
ggplot(sdata3, aes(자치구, 영세아, fill=자치구)) +  geom_col()
head(sdata2); head(sdata3)
head(sdata3)
source('D:/workspace-Jwp/R/R-Project/통계 빅데이터 공모전_2019/18년도.R', encoding = 'UTF-8', echo=TRUE)
install.packages("devtools")
head(sdata2); head(sdata3)
head(sdata3)
source('D:/workspace-Jwp/R/R-Project/통계 빅데이터 공모전_2019/18년도.R', encoding = 'UTF-8', echo=TRUE)
source('D:/workspace-Jwp/R/R-Project/통계 빅데이터 공모전_2019/17년도.R', encoding = 'UTF-8', echo=TRUE)
source('D:/workspace-Jwp/R/R-Project/통계 빅데이터 공모전_2019/16년도.R', encoding = 'UTF-8', echo=TRUE)
source('D:/workspace-Jwp/R/R-Project/통계 빅데이터 공모전_2019/15년도.R', encoding = 'UTF-8', echo=TRUE)
